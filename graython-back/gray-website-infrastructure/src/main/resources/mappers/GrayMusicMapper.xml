<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gray.website.infrastructure.mapper.GrayMusicMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="gray.website.common.entity.GrayMusic">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="file_name" property="fileName"/>
        <result column="folder_path" property="folderPath"/>
        <result column="md5" property="md5"/>
        <result column="ext" property="ext"/>
        <result column="size" property="size"/>
        <result column="duration" property="duration"/>
        <result column="mime_type" property="mimeType"/>
        <result column="favorite" property="favorite"/>
        <result column="playlist" property="playlist"/>
        <result column="title" property="title"/>
        <result column="artist" property="artist"/>
        <result column="album" property="album"/>
        <result column="track_number" property="trackNumber"/>
        <result column="track_total" property="trackTotal"/>
        <result column="genre" property="genre"/>
        <result column="release_date" property="releaseDate"/>
        <result column="lyrics" property="lyrics"/>
        <result column="last_modified" property="lastModified"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id, file_name, folder_path, md5, ext, size, duration, mime_type, favorite, playlist, title, artist,
        album, track_number, track_total, genre, release_date, lyrics, last_modified, create_time, update_time
    </sql>
    <update id="likeMusic">
        update gray_music set favorite = CASE
        WHEN favorite = '0' THEN '1'
        WHEN favorite = '1' THEN '0'
        ELSE '1' END
        where id = #{id}
    </update>
    <update id="playlistAddMusic">
        update gray_music set playlist = CASE
        WHEN playlist = '0' THEN '1'
        WHEN playlist = '1' THEN '0'
        ELSE '1' END
        where id = #{id}
    </update>
    <select id="randomMusic" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from gray_music
        where playlist = '1'
        order by RAND() LIMIT #{ size }
    </select>

</mapper>
