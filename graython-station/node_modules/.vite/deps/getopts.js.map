{
  "version": 3,
  "sources": ["../../getopts/index.js", "dep:getopts"],
  "sourcesContent": ["const EMPTYARR = []\nconst SHORTSPLIT = /$|[!-@[-`{-~][\\s\\S]*/g\nconst isArray = Array.isArray\n\nconst parseValue = function (any) {\n  if (any === \"\") return \"\"\n  if (any === \"false\") return false\n  const maybe = +any\n  return maybe * 0 === 0 ? maybe : any\n}\n\nconst parseAlias = function (aliases) {\n  let out = {},\n    alias,\n    prev,\n    any\n\n  for (let key in aliases) {\n    any = aliases[key]\n    alias = out[key] = isArray(any) ? any : [any]\n\n    for (let i = 0; i < alias.length; i++) {\n      prev = out[alias[i]] = [key]\n\n      for (let k = 0; k < alias.length; k++) {\n        if (i !== k) prev.push(alias[k])\n      }\n    }\n  }\n\n  return out\n}\n\nconst parseDefault = function (aliases, defaults) {\n  let out = {},\n    alias,\n    value\n\n  for (let key in defaults) {\n    alias = aliases[key]\n    value = defaults[key]\n\n    out[key] = value\n\n    if (alias === undefined) {\n      aliases[key] = EMPTYARR\n    } else {\n      for (let i = 0; i < alias.length; i++) {\n        out[alias[i]] = value\n      }\n    }\n  }\n\n  return out\n}\n\nconst parseOptions = function (aliases, options, value) {\n  let out = {},\n    key,\n    alias\n\n  if (options !== undefined) {\n    for (let i = 0; i < options.length; i++) {\n      key = options[i]\n      alias = aliases[key]\n\n      out[key] = value\n\n      if (alias === undefined) {\n        aliases[key] = EMPTYARR\n      } else {\n        for (let k = 0, end = alias.length; k < end; k++) {\n          out[alias[k]] = value\n        }\n      }\n    }\n  }\n\n  return out\n}\n\nconst write = function (out, key, value, aliases, unknown) {\n  let prev,\n    alias = aliases[key],\n    len = alias === undefined ? -1 : alias.length\n\n  if (len >= 0 || unknown === undefined || unknown(key)) {\n    prev = out[key]\n\n    if (prev === undefined) {\n      out[key] = value\n    } else {\n      if (isArray(prev)) {\n        prev.push(value)\n      } else {\n        out[key] = [prev, value]\n      }\n    }\n\n    for (let i = 0; i < len; i++) {\n      out[alias[i]] = out[key]\n    }\n  }\n}\n\nexport default function (argv, opts) {\n  let unknown = (opts = opts || {}).unknown,\n    aliases = parseAlias(opts.alias),\n    strings = parseOptions(aliases, opts.string, \"\"),\n    values = parseDefault(aliases, opts.default),\n    bools = parseOptions(aliases, opts.boolean, false),\n    stopEarly = opts.stopEarly,\n    _ = [],\n    out = { _ },\n    key,\n    arg,\n    end,\n    match,\n    value\n\n  for (let i = 0, len = argv.length; i < len; i++) {\n    arg = argv[i]\n\n    if (arg[0] !== \"-\" || arg === \"-\") {\n      if (stopEarly) {\n        while (i < len) {\n          _.push(argv[i++])\n        }\n      } else {\n        _.push(arg)\n      }\n    } else if (arg === \"--\") {\n      while (++i < len) {\n        _.push(argv[i])\n      }\n    } else if (arg[1] === \"-\") {\n      end = arg.indexOf(\"=\", 2)\n      if (arg[2] === \"n\" && arg[3] === \"o\" && arg[4] === \"-\") {\n        key = arg.slice(5, end >= 0 ? end : undefined)\n        value = false\n      } else if (end >= 0) {\n        key = arg.slice(2, end)\n        value =\n          bools[key] !== undefined ||\n          (strings[key] === undefined\n            ? parseValue(arg.slice(end + 1))\n            : arg.slice(end + 1))\n      } else {\n        key = arg.slice(2)\n        value =\n          bools[key] !== undefined ||\n          (len === i + 1 || argv[i + 1][0] === \"-\"\n            ? strings[key] === undefined\n              ? true\n              : \"\"\n            : strings[key] === undefined\n            ? parseValue(argv[++i])\n            : argv[++i])\n      }\n      write(out, key, value, aliases, unknown)\n    } else {\n      SHORTSPLIT.lastIndex = 2\n      match = SHORTSPLIT.exec(arg)\n      end = match.index\n      value = match[0]\n\n      for (let k = 1; k < end; k++) {\n        write(\n          out,\n          (key = arg[k]),\n          k + 1 < end\n            ? strings[key] === undefined ||\n                arg.substring(k + 1, (k = end)) + value\n            : value === \"\"\n            ? len === i + 1 || argv[i + 1][0] === \"-\"\n              ? strings[key] === undefined || \"\"\n              : bools[key] !== undefined ||\n                (strings[key] === undefined ? parseValue(argv[++i]) : argv[++i])\n            : bools[key] !== undefined ||\n              (strings[key] === undefined ? parseValue(value) : value),\n          aliases,\n          unknown\n        )\n      }\n    }\n  }\n\n  for (let key in values) if (out[key] === undefined) out[key] = values[key]\n  for (let key in bools) if (out[key] === undefined) out[key] = false\n  for (let key in strings) if (out[key] === undefined) out[key] = \"\"\n\n  return out\n}\n", "import d from \"./node_modules/getopts/index.js\";export default d;"],
  "mappings": "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",
  "names": []
}
